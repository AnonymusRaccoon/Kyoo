<Project Sdk="Microsoft.NET.Sdk.Web">

	<PropertyGroup>
		<TargetFramework>netcoreapp3.0</TargetFramework>
		<TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
		<TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
		<IsPackable>false</IsPackable>
		<SpaRoot>ClientApp\</SpaRoot>
		<DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>

		<!-- Set this to true if you enable server-side prerendering -->
		<BuildServerSideRenderer>false</BuildServerSideRenderer>
		<Company>SDG</Company>
		<Authors>Anonymus-Raccoon</Authors>
		<RepositoryUrl>https://github.com/AnonymusRaccoon/Kyoo</RepositoryUrl>
		<StartupObject>Kyoo.Program</StartupObject>
	</PropertyGroup>

	<ItemGroup>
		<PackageReference Include="Microsoft.AspNet.WebApi.Client" Version="5.2.7" />
		<PackageReference Include="Microsoft.AspNetCore.Mvc.NewtonsoftJson" Version="3.0.0" />
		<PackageReference Include="Microsoft.AspNetCore.SpaServices" Version="3.0.0" />
		<PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="3.0.0" />
		<PackageReference Include="Newtonsoft.Json" Version="12.0.3" />
		<PackageReference Include="System.Data.SQLite.Core" Version="1.0.112" />
	</ItemGroup>

	<ItemGroup>
		<!-- Don't publish the SPA source files, but do show them in the project files list -->
		<Content Remove="$(SpaRoot)**" />
		<None Remove="$(SpaRoot)**" />
		<None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
		<None Remove="Controllers\MetadataProvider\**" />
		<Content Remove="Controllers\MetadataProvider\**" />
	</ItemGroup>

	<ItemGroup>
	  <_ContentIncludedByDefault Remove="ClientApp\e2e\tsconfig.json" />
	</ItemGroup>

	<ItemGroup>
	  <None Remove="libtranscoder.so" />
	  <EmbeddedResource Include="libtranscoder.so">
	    <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
	  </EmbeddedResource>
	  <None Remove="kyoo.sh" />
	  <EmbeddedResource Include="kyoo.sh">
	    <CopyToOutputDirectory>Always</CopyToOutputDirectory>
	  </EmbeddedResource>
	  <EmbeddedResource Remove="Controllers\MetadataProvider\**" />
	</ItemGroup>

	<ItemGroup>
	  <ProjectReference Include="..\Kyoo.Common\Kyoo.Common.csproj" />
	</ItemGroup>

	<ItemGroup>
	  <Compile Remove="Controllers\MetadataProvider\**" />
	</ItemGroup>
	
	<Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
		<!-- Ensure Node.js is installed -->
		<Exec Command="node --version" ContinueOnError="true">
			<Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
		</Exec>
		<Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
		<Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
	</Target>

	<Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
		<!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --prod" />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr -- --prod" Condition=" '$(BuildServerSideRenderer)' == 'true' " />

		<!-- Include the newly-built files in the publish output -->
		<ItemGroup>
			<DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
			<DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
			<ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
				<RelativePath>%(DistFiles.Identity)</RelativePath>
				<CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
				<ExcludeFromSingleFile>true</ExcludeFromSingleFile>
			</ResolvedFileToPublish>
		</ItemGroup>
	</Target>

</Project>
